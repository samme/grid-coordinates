{"name":"Grid-coordinates","tagline":"Sass and Compass highly-configurable CSS grid framework","body":"# Grid Coordinates\r\n\r\n## A Sass based CSS Grid Framework Generator\r\n\r\nGrid Coordinates is a highly configurable CSS Grid Framework written in [Sass](http://sass-lang.com/), inspired by Nathan Smith's [960.gs](http://960.gs/) and Tyler Tate's [1kb CSS Grid](http://1kbgrid.com/).\r\n\r\nGrid Coordinates takes the \"coordinates\" (grid columns, grid width and grid gutter width) and generates the styles required for your grid.\r\n\r\nGrid Coordinates is designed to be used as a [Compass](http://compass-style.org/) [extension](http://compass-style.org/help/tutorials/extensions/) and can be installed as a [Ruby gem](http://rubygems.org/gems/grid-coordinates) or as a stand alone Compass extension.\r\n\r\n## Just the grid\r\n\r\nGrid Coordinates does one job - provide a rock solid grid framework. It's able to generate styles for grids of any size - you control the coordinates and it generates the styles.\r\n\r\nIt fully leverages classes, extends and mixins to set up the styles for your grid. It supports nested grids, prefix and suffix grid features as well as push and pull grid features.\r\n\r\n## Installation\r\n\r\n`gem install grid-coordinates`\r\n\r\nThen add `require 'grid-coordinates'` to your Compass config file.\r\n\r\n## Usage\r\n\r\nGrid Coordinates defaults to a 960px grid with 12 columns and a 60px gutter (perfect for fans of 960.gs). You can override these defaults in your project if this grid doesn't suit your needs.\r\n\r\nUse the [variable grid system](http://grids.heroku.com/) to plot the course for your CSS grid. The coordinates generated are based on the 960 Grid System, which is one point of inspiration for Grid Coordinates. Review the included test project for a simple demonstration of how to use Grid Coordinates.\r\n\r\n### Configure as needed and import\r\n\r\n    // Configure grid coordinates\r\n    $grid-columns: 12;\r\n    $grid-width: 60px;\r\n    $grid-gutter-width: 20px;\r\n    \r\n    @import \"grid-coordinates\";\r\n    \r\n    @include grid-coordinates;\r\n\r\n### Grid Coordinates's clearfix\r\n\r\nThe clearfix provided Grid Coordinates has an option to use a \"clearfix-prefix\". By default, the clearfix that ships with Grid Coordinates has no prefix and is simply compiled to `.clearfix`. If for some reason you're project already has a clearfix class, you shoulld either update to use the clearfix provided by Grid Coordinates or set the prefix variable to avoid conflicts.\r\n\r\nFor example:\r\n\r\n    $clearfix-prefix: \"__\"\r\n\r\nThis would output:\r\n\r\n    .__clearfix { ... }\r\n\r\n### Legacy users\r\n\r\nIf you are a legacy user of Grid Coordinates, it's possible that you've used the previously supported clearfix classes, `.grid-clearfix` and `.grid-pie-clearfix`. If that is the case, you may want to update any used of either of those classes, or set the variable `$support-legacy-grid-clearfix` to `true`. This will include those classes in the compiled CSS and `@extend` the new clearfix provided with Grid Coordinates.\r\n\r\n### Using classes and `@extend`\r\n\r\nWhen you use the mixin `@include grid-coordinates;` (as shown above) you are able to leverage the CSS class selectors in your HTML markup or use the Sass `@extend` directive to \"extend\" the class selectors in your Sass stylesheets.\r\n\r\n`@extend .grid-container`\r\n\r\n`@extend .nested-grid-container`\r\n\r\n`@extend .grid-[columns]`\r\n\r\n`@extend .grid-full`\r\n\r\n`@extend .grid-prefix-[columns]`\r\n\r\n`@extend .grid-suffix-[columns]`\r\n\r\n`@extend .grid-push-[columns]`\r\n\r\n`@extend .grid-pull-[columns]`\r\n\r\n### Using mixins\r\n\r\nRegardless if go the route of using the mixin `@include grid-coordinates;` (as shown above) or not, you'll have access to use these mixins in your Sass stylesheets. Keep in mind that when you go the route of using mixins, you could end up replicating a lot of code in your output CSS. Learn more about the [Sass extend concept](http://sass-lang.com/docs/yardoc/file.SASS_REFERENCE.html#extend) to see if you should use that method or mixins. Either way, Grid Coordinates got your back.\r\n\r\n`@include grid-container`\r\n\r\n`@include nested-grid-container`\r\n\r\n`@include grid([columns])`\r\n\r\n`@include grid-full`\r\n\r\n`@include grid-prefix([columns])`\r\n\r\n`@include grid-suffix([columns])`\r\n\r\n`@include grid-push([columns])`\r\n\r\n`@include grid-pull([columns])`\r\n\r\n## License\r\n\r\nCopyright (c) 2009-2011 Adam Stacoviak\r\n\r\nPermission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:\r\n\r\nThe above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}